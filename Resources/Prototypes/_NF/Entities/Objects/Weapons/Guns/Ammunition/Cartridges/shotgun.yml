#region Base
- type: entity
  id: NFBaseShellShotgun
  name: shell (.50)
  parent: [ BaseC1Contraband, BaseShellShotgun ]
  abstract: true
  components:
  - type: Tag
    tags:
    - Cartridge
    - ShellShotgun

- type: entity
  id: NFBaseShellShotgunLight
  parent: NFBaseShellShotgun
  abstract: true
  components:
  - type: Tag
    tags:
    - Cartridge
    - ShellShotgun
    - ShellShotgunLight

#region Pellets
- type: entity
  id: NFShellShotgunBuckshot
  name: shell (.50 buckshot)
  parent: NFBaseShellShotgun
  components:
  - type: Sprite
    layers:
      - state: base
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFPelletShotgunSpread

- type: entity
  id: NFShellShotgunBuckshotOverpressure
  name: shell (.50 overpressure)
  parent: NFBaseShellShotgun
  components:
  - type: Sprite
    layers:
      - sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
        state: overpressure
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFPelletShotgunOverpressureSpread
  - type: SpentAmmoVisuals
    state: "overpressure"

- type: entity
  id: NFShellShotgunIncendiary
  name: shell (.50 incendiary)
  parent: NFBaseShellShotgun
  components:
  - type: Sprite
    layers:
      - state: incendiary
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFPelletShotgunIncendiarySpread
  - type: SpentAmmoVisuals
    state: "incendiary"

- type: entity
  id: NFShellShotgunPractice
  name: shell (.50 practice)
  parent: NFBaseShellShotgun
  components:
  - type: Sprite
    layers:
      - state: practice
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFPelletShotgunPracticeSpread
  - type: SpentAmmoVisuals
    state: "practice"

- type: entity
  id: NFShellShotgunUranium
  name: shell (.50 uranium)
  parent: NFBaseShellShotgun
  components:
  - type: Sprite
    layers:
      - state: depleted-uranium
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFPelletShotgunUraniumSpread
  - type: SpentAmmoVisuals
    state: "depleted-uranium"

- type: entity
  id: NFShellShotgunImprovised
  name: shell (.50 improvised)
  parent: NFBaseShellShotgun
  components:
  - type: Sprite
    layers:
      - state: improvised
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFPelletShotgunImprovisedSpread
  - type: SpentAmmoVisuals
    state: "improvised"
  - type: Construction
    graph: ImprovisedShotgunShellGraph
    node: shell

#region Slugs
- type: entity
  id: NFShellShotgunSlug
  name: shell (.50 slug)
  parent: NFBaseShellShotgun
  components:
  - type: Sprite
    layers:
      - state: slug
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFShotgunSlug
  - type: SpentAmmoVisuals
    state: "slug"

- type: entity
  id: NFShellShotgunBeanbag
  name: shell (.50 beanbag)
  parent: NFBaseShellShotgunLight
  components:
  - type: Sprite
    layers:
      - state: beanbag
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFShotgunSlugBeanbag
  - type: SpentAmmoVisuals
    state: "beanbag"

- type: entity
  id: NFShellShotgunFlare
  name: shell (.50 flare)
  parent: NFBaseShellShotgunLight
  components:
  - type: Sprite
    layers:
      - state: flare
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFShotgunSlugFlare
  - type: SpentAmmoVisuals
    state: "flare"

- type: entity
  id: NFShellShotgunTranquilizer
  name: shell (.50 tranquilizer)
  parent: NFBaseShellShotgunLight
  components:
  - type: Sprite
    layers:
      - state: tranquilizer
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: NFShotgunSlugTranquilizer
  - type: SpentAmmoVisuals
    state: "tranquilizer"
  - type: ChemicalAmmo
  - type: SolutionContainerManager
    solutions:
      ammo:
        reagents:
        - ReagentId: ChloralHydrate
          Quantity: 4
  - type: SolutionTransfer
    maxTransferAmount: 4

#region Utility shells
# Crafting mats
- type: entity # TODO: modular recipe
  id: BlankShellShotgunPrinted
  name: shell (.50 empty)
  parent: [ BaseItem, BaseC1Contraband ] # BaseCartridge
  abstract: true
  components:
  - type: Item
    size: Tiny
  - type: CartridgeAmmo
    soundEject:
      collection: ShellEject
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: blank
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: Appearance
  - type: SpentAmmoVisuals
    state: "blank"
  - type: StaticPrice
    price: 1

# Actual ammo
- type: entity
  id: ShellShotgunNet
  name: shell (.50 net)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: net
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: Bola
  - type: SpentAmmoVisuals
    state: "blank"

- type: entity
  id: ShellShotgunLaser
  name: shell (.50 laser)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: energy
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: BulletEnergyGunLaser
  - type: SpentAmmoVisuals
    state: "energy"

- type: entity
  id: ShellShotgunDisabler
  name: shell (.50 disabler)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: disabler
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: BulletDisabler # 4 hits to stun (like beanbag), alt: BulletDisablerSmg - 8 hits to stun
  - type: SpentAmmoVisuals
    state: "disabler"

- type: entity
  id: ShellShotgunHighExSlug
  name: shell (.50 high-ex slug)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: highex
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: PelletShotgunHighExSlug
  - type: SpentAmmoVisuals
    state: "highex"

- type: entity
  id: ShellShotgunFlashbangSlug
  name: shell (.50 flashbang slug)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: highex # TODO: sprite
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: PelletShotgunFlashbangSlug
  - type: SpentAmmoVisuals
    state: "highex"

- type: entity # TODO: add chem transfer mechanics from syringe gun once available
  id: ShellShotgunSyringe
  name: shell (.50 syringe)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: syringe
        map: [ "enum.AmmoVisualLayers.Base" ]
      - state: syringe-fill-1
        map: ["enum.SolutionContainerLayers.Fill"]
        visible: false
  - type: CartridgeAmmo
    proto: PelletShotgunTranquilizer
  - type: ChemicalAmmo
  - type: SolutionContainerManager
    solutions:
      ammo:
        maxVol: 2 # Turns out, that 4u is OP as hell
  - type: RefillableSolution
    solution: ammo
  - type: DrainableSolution
    solution: ammo
  - type: SolutionTransfer
    maxTransferAmount: 2
  - type: SpentAmmoVisuals
    state: "syringe"
  - type: SolutionContainerVisuals
    maxFillLevels: 4
    fillBaseName: syringe-fill-

- type: entity # TODO: make it work :(
  id: ShellShotgunCluster
  name: shell (.50 cluster)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: cluster
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: PelletShotgunCluster
  - type: SpentAmmoVisuals
    state: "blank"

- type: entity
  id: ShellShotgunAntimateriel
  name: shell (.50 anti-materiel)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: antimateriel
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: BulletAntiMaterielWeak # same damage as magnum, but has structural damage
  - type: SpentAmmoVisuals
    state: "antimateriel"

- type: entity
  id: ShellShotgunSoap
  name: shell (.50 soap)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: soap
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: PelletShotgunSoapletSpread
  - type: SpentAmmoVisuals
    state: "blank"

- type: entity
  id: ShellShotgunTrash
  name: shell (.50 trash)
  parent: BaseShellShotgun
  components:
  - type: Sprite
    sprite: _NF/Objects/Weapons/Guns/Ammunition/Casings/shotgun_shell.rsi
    layers:
      - state: soap # TODO: sprite trash fill
        map: [ "enum.AmmoVisualLayers.Base" ]
  - type: CartridgeAmmo
    proto: PelletShotgunTrashSpread
  - type: SpentAmmoVisuals
    state: "blank"

