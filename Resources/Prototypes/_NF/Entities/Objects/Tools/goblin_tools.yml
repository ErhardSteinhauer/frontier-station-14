#region base
- type: entity
  id: NFBaseGoblinMadeTools
  suffix: Goblin Made
  abstract: true
  components:
  - type: Clothing # Apparently a lot of upstream tools have equipped sprites, but this bit isn't defined there
    quickEquip: false
    slots:
    - Belt
  - type: PhysicalComposition
    materialComposition:
      Steel: 100 # That's what you get for recycling 1 wrapper
  - type: StaticPrice
    price: 0 # Can't get rich :(

# tools
#region multitool
- type: entity
  id: NFGoblinMadeMultitool
  parent: [ NFBaseGoblinMadeTools, Multitool ]
  name: "'acking jig"
  description: "An improvised multitool pieced together from faulty circuit board, broken display, bent antennae and stuffed into a discarded wrapper for additional protection against elements."
  components:
  - type: Tag
    tags:
    - Multitool
    - DoorElectronicsConfigurator
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/multitool.rsi
    layers:
    - sprite: Objects/Consumable/Food/snacks.rsi
      state: cheesiehonkers
      map: [ "iconMultitoolWrapper" ]
    - state: icon
    - state: icon-unshaded
      shader: unshaded
    - state: icon-text-unshaded
      shader: unshaded
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/multitool.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/multitool.rsi
  - type: RandomSprite
    available:
      - iconMultitoolWrapper:
          cheesiehonkers: ""
          cnds: ""
          chips: ""
          boritos: ""
          pistachio: ""
          raisins: ""
          semki: ""
          susjerky: ""
          chinese1: ""
          chinese2: ""
          chinese3: ""
          chinese4: ""
  - type: Construction
    graph: NFGoblinMadeMultitool
    node: NFGoblinMadeMultitool

#region wire cutter
- type: entity
  id: NFGoblinMadeWirecutter
  parent: [ NFBaseGoblinMadeTools, Wirecutter ]
  name: wire snippah
  description: A wire cutter made out of glass shards, metal bits, cloth, and some wires. What's up with all the sparking, though?
  components:
  - type: Tag
    tags:
    - PlantSampleTaker
    - Wirecutter
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/wirecutters.rsi
    layers:
    - state: icon
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/wirecutters.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/wirecutters.rsi
  - type: Construction
    graph: NFGoblinMadeWirecutter
    node: NFGoblinMadeWirecutter

#region screwdriver
- type: entity
  id: NFGoblinMadeScrewdriver
  parent: [ NFBaseGoblinMadeTools, Screwdriver ]
  name: lectro-drivah
  description: An improvised electrical screwdriver, not much in terms of torque, but your wrists will be less sore.
  components:
  - type: Tag
    tags:
    - Screwdriver
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/screwdriver.rsi
    layers:
    - state: screwdriver-base
    - state: screwdriver-wires
      map: [ "iconScrewdriverWires" ]
    - state: screwdriver-unshaded
      shader: unshaded
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/screwdriver.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/screwdriver.rsi
  - type: RandomSprite
    available:
    - iconScrewdriverWires:
        screwdriver-wires: Rainbow
  - type: Tool
    qualities:
      - Screwing
    useSound: /Audio/Items/drill_use.ogg
  - type: Construction
    graph: NFGoblinMadeScrewdriver
    node: NFGoblinMadeScrewdriver

#region crowbar
- type: entity
  id: NFGoblinMadeCrowbar
  parent: [ NFBaseGoblinMadeTools, Crowbar ]
  name: lectro-jilt
  description: The next step in crowbar evolution - jack. Enhanced with an improvised electrical winch.
  components:
  - type: Tag
    tags:
    - Crowbar
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/crowbar.rsi
    layers:
    - state: icon
    - state: icon-unshaded
      shader: unshaded
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/crowbar.rsi
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/crowbar.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
    storedSprite:
      sprite: _NF/Objects/Tools/goblin_tools/crowbar.rsi
      state: storage
  - type: Tool
    qualities:
      - Prying
    useSound: /Audio/Items/drill_use.ogg
  - type: Construction
    graph: NFGoblinMadeCrowbar
    node: NFGoblinMadeCrowbar

#region wrench
- type: entity
  id: NFGoblinMadeWrench
  parent: [ NFBaseGoblinMadeTools, Wrench ]
  name: lectro-spannah
  description: An improvised electrical wrench, not much in terms of torque, but your wrists will be less sore.
  components:
  - type: Tag
    tags:
    - Wrench
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/wrench.rsi
    layers:
    - state: icon
    - state: icon-unshaded
      shader: unshaded
    - state: can1
      map: ["randomWrenchCan"]
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/wrench.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
    storedSprite:
      sprite: _NF/Objects/Tools/goblin_tools/wrench.rsi
      state: icon
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/wrench.rsi
  - type: Tool
    qualities:
      - Anchoring
    useSound: /Audio/Items/drill_use.ogg
  - type: RandomSprite
    available:
      - randomWrenchCan:
          can1: ""
          can2: ""
          can3: ""
          can4: ""
          can5: ""
          can6: ""
          can7: ""
          can8: ""
          can9: ""
          can10: ""
  - type: Construction
    graph: NFGoblinMadeWrench
    node: NFGoblinMadeWrench

#region welder
- type: entity
  id: NFGoblinMadeWelder
  parent: [ NFBaseGoblinMadeTools, Welder ]
  name: burnah torch
  description: An improvised welding tool made out of a plastic bottle, an empty soda can, a spray nozzle, and a leaking battery.
  components:
  - type: Tag
    tags:
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/welder.rsi
    layers:
    - state: icon
    - state: icon-unshaded
      shader: unshaded
    - state: can1
      map: ["randomWelderCan"]
    - state: welder_flame
      visible: false
      shader: unshaded
      map: ["enum.ToggleVisuals.Layer"]
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: GenericVisualizer
    visuals:
      enum.ToggleVisuals.Toggled:
        enum.ToggleVisuals.Layer:
          True: { visible: true }
          False: { visible: false }
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/welder.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/welder.rsi
  - type: RandomSprite
    available:
      - randomWelderCan:
          can1: ""
          can2: ""
          can3: ""
          can4: ""
          can5: ""
          can6: ""
          can7: ""
          can8: ""
          can9: ""
          can10: ""

- type: entity
  id: NFGoblinMadeWelderEmpty
  parent: NFGoblinMadeWelder
  suffix: Goblin Made, Empty
  components:
  - type: SolutionContainerManager
    solutions:
      Welder:
        reagents: []
        maxVol: 100
  - type: Construction
    graph: NFGoblinMadeWelder
    node: NFGoblinMadeWelder

#region mini hoe
- type: entity
  id: NFGoblinMadeMiniHoe
  parent: [ NFBaseGoblinMadeTools, HydroponicsToolMiniHoe ]
  name: lectro-scratchah
  description: A small modification for the tried and true electrical screwdriver device. Weeds , your end is nigh.
  components:
  - type: Tag
    tags:
    - Hoe
    - BotanyHoe
    - GoblinMade
  - type: EmitSoundOnLand
    sound:
      path: /Audio/Items/wrench_drop.ogg
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/hoe.rsi
    layers:
    - state: hoe-base
    - state: hoe-wires
      map: [ "iconHoeWires" ]
    - state: hoe-unshaded
      shader: unshaded
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/hoe.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
    storedRotation: -90
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/hoe.rsi
  - type: RandomSprite
    available:
    - iconHoeWires:
        hoe-wires: Rainbow
  - type: Construction
    graph: NFGoblinMadeMiniHoe
    node: NFGoblinMadeMiniHoe

#region minig drill
- type: entity
  id: NFGoblinMadeMiningDrill
  parent: [ NFBaseGoblinMadeTools, MiningDrill ]
  name: pneumatic 'ammah
  description: The pickaxe is dead; hail the new king of manual mining - the improvised pneumatic hammer.
  components:
  - type: Tag
    tags:
    - Pickaxe
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/handdrill.rsi
    layers:
    - state: icon
    - state: icon-unshaded
      shader: unshaded
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/handdrill.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/handdrill.rsi
  - type: MeleeWeapon
    wideAnimationRotation: -45
    soundHit:
      path: "/Audio/_NF/Items/Jackhammer/jackhammer-short.ogg"
    attackRate: 2
    damage:
      groups:
        Brute: 1.25
      types:
        Structural: 5
  - type: Construction
    graph: NFGoblinMadeMiningDrill
    node: NFGoblinMadeMiningDrill

#region tray scanner
- type: entity
  id: NFGoblinMadeTrayScanner
  parent: [ NFBaseGoblinMadeTools, trayScanner ]
  name: stash oglah
  description: With this tool you no longer have to memorise where you've hid you stash.
  components:
  - type: Tag
    tags:
    - GoblinMade
  - type: Sprite
    sprite: _NF/Objects/Tools/goblin_tools/tray.rsi
    layers:
    - sprite: Objects/Consumable/Food/snacks.rsi
      state: cheesiehonkers
      map: [ "iconTrayWrapper" ]
    - state: icon
    - state: icon-unshaded
      shader: unshaded
    - state: tray-off
      map: ["baseTRay"]
      shader: unshaded
    - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
      state: overlay-icon
      shader: unshaded
  - type: GenericVisualizer
    visuals:
      enum.TrayScannerVisual.Visual:
        baseTRay:
          On: { state: tray-on }
          Off: { state: tray-off }
  - type: Item
    sprite: _NF/Objects/Tools/goblin_tools/tray.rsi
    inhandVisuals:
      left:
      - state: inhand-left
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-left
        shader: unshaded
      right:
      - state: inhand-right
      - sprite: _NF/Objects/Tools/goblin_tools/overlay_sparks.rsi
        state: overlay-inhand-right
        shader: unshaded
  - type: Clothing
    sprite: _NF/Objects/Tools/goblin_tools/tray.rsi
  - type: RandomSprite
    available:
      - iconTrayWrapper:
          cheesiehonkers: ""
          cnds: ""
          chips: ""
          boritos: ""
          pistachio: ""
          raisins: ""
          semki: ""
          susjerky: ""
          chinese1: ""
          chinese2: ""
          chinese3: ""
          chinese4: ""
  - type: Construction
    graph: NFGoblinMadeTrayScanner
    node: NFGoblinMadeTrayScanner
